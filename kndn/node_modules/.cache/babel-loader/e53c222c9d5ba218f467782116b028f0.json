{"ast":null,"code":"import axios from 'axios';\nimport { CONFIG } from '../../../../helpers/config';\nexport const LOGIN_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/gettoken`;\nexport const LOGOUT_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/logout`;\nexport const REGISTER_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/register`;\nexport const REQUEST_PASSWORD_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/forgetpass`;\nexport const CHANGE_PASSWORD_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/changepass`; // Server should return AuthModel\n\nexport function login(userName, password) {\n  return axios.post(LOGIN_URL, {\n    user: userName,\n    pass: password\n  }, {\n    headers: {\n      Authorization: `Bearer ${CONFIG.GETWAY_TOKEN}`\n    }\n  });\n}\nexport function logout(accessToken) {\n  return axios.post(LOGOUT_URL, {\n    token: accessToken\n  }, {\n    headers: {\n      Authorization: `Bearer ${CONFIG.GETWAY_TOKEN}`\n    }\n  });\n} // Server should return AuthModel\n\nexport const register = (Email, Name, UserName, PassWord, Address, confirmPassword, DateOfBirth, Mobile, Sex) => {\n  return axios.post(REGISTER_URL, {\n    Email,\n    Name,\n    UserName,\n    PassWord,\n    Address,\n    Mobile,\n    Sex,\n    IsAuctioner: false,\n    IsDeleted: false\n  }, {\n    headers: {\n      Authorization: `Bearer ${CONFIG.GETWAY_TOKEN}`\n    }\n  });\n}; // Server should return object => { result: boolean } (Is Email in DB)\n\nexport function requestPassword(email) {\n  return axios.post(REQUEST_PASSWORD_URL, {\n    email\n  });\n}\nexport function changePassword(email, password, confirmPassword, token) {\n  return axios.post(CHANGE_PASSWORD_URL, {\n    email,\n    password,\n    confirmPassword,\n    token\n  });\n}","map":{"version":3,"names":["axios","CONFIG","LOGIN_URL","GETWAY_URL","GETWAY_PATH","LOGOUT_URL","REGISTER_URL","REQUEST_PASSWORD_URL","CHANGE_PASSWORD_URL","login","userName","password","post","user","pass","headers","Authorization","GETWAY_TOKEN","logout","accessToken","token","register","Email","Name","UserName","PassWord","Address","confirmPassword","DateOfBirth","Mobile","Sex","IsAuctioner","IsDeleted","requestPassword","email","changePassword"],"sources":["C:/Users/lappv/Desktop/KNDN/kndn/src/app/modules/auth/redux/AuthCRUD.ts"],"sourcesContent":["import axios from 'axios'\r\nimport { AuthModel } from '../models/AuthModel'\r\nimport { UserModel } from '../models/UserModel'\r\nimport store from '../../../../setup/redux/Store'\r\nimport { CONFIG } from '../../../../helpers/config'\r\n\r\nexport const LOGIN_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/gettoken`\r\nexport const LOGOUT_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/logout`\r\nexport const REGISTER_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/register`\r\nexport const REQUEST_PASSWORD_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/user/forgetpass`\r\nexport const CHANGE_PASSWORD_URL = `${CONFIG.GETWAY_URL}/${CONFIG.GETWAY_PATH}/changepass`\r\n\r\n// Server should return AuthModel\r\nexport function login(userName: string, password: string) {\r\n  return axios.post(LOGIN_URL, { user: userName, pass: password }, { headers: { Authorization: `Bearer ${CONFIG.GETWAY_TOKEN}` } })\r\n}\r\n\r\nexport function logout(accessToken: string) {\r\n  return axios.post(LOGOUT_URL, { token: accessToken }, { headers: { Authorization: `Bearer ${CONFIG.GETWAY_TOKEN}` } })\r\n}\r\n\r\n// Server should return AuthModel\r\nexport const register = (\r\n  Email: string,\r\n  Name: string,\r\n  UserName: string,\r\n  PassWord: string,\r\n  Address: string,\r\n  confirmPassword: string,\r\n  DateOfBirth: string,\r\n  Mobile: string,\r\n  Sex: string,\r\n) => {\r\n  return axios.post<any>(REGISTER_URL, {\r\n    Email,\r\n    Name,\r\n    UserName,\r\n    PassWord,\r\n    Address,\r\n    Mobile,\r\n    Sex,\r\n    IsAuctioner: false,\r\n    IsDeleted: false,\r\n  }, { headers: { Authorization: `Bearer ${CONFIG.GETWAY_TOKEN}` } })\r\n}\r\n\r\n// Server should return object => { result: boolean } (Is Email in DB)\r\nexport function requestPassword(email: string) {\r\n  return axios.post<{ result: boolean }>(REQUEST_PASSWORD_URL, { email })\r\n}\r\nexport function changePassword(\r\n  email: string,\r\n  password: string,\r\n  confirmPassword: string,\r\n  token: string\r\n) {\r\n  return axios.post<{ result: boolean }>(CHANGE_PASSWORD_URL, {\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n    token,\r\n  })\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,OAAO,MAAMC,SAAS,GAAI,GAAED,MAAM,CAACE,UAAW,IAAGF,MAAM,CAACG,WAAY,gBAA7D;AACP,OAAO,MAAMC,UAAU,GAAI,GAAEJ,MAAM,CAACE,UAAW,IAAGF,MAAM,CAACG,WAAY,cAA9D;AACP,OAAO,MAAME,YAAY,GAAI,GAAEL,MAAM,CAACE,UAAW,IAAGF,MAAM,CAACG,WAAY,gBAAhE;AACP,OAAO,MAAMG,oBAAoB,GAAI,GAAEN,MAAM,CAACE,UAAW,IAAGF,MAAM,CAACG,WAAY,kBAAxE;AACP,OAAO,MAAMI,mBAAmB,GAAI,GAAEP,MAAM,CAACE,UAAW,IAAGF,MAAM,CAACG,WAAY,aAAvE,C,CAEP;;AACA,OAAO,SAASK,KAAT,CAAeC,QAAf,EAAiCC,QAAjC,EAAmD;EACxD,OAAOX,KAAK,CAACY,IAAN,CAAWV,SAAX,EAAsB;IAAEW,IAAI,EAAEH,QAAR;IAAkBI,IAAI,EAAEH;EAAxB,CAAtB,EAA0D;IAAEI,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASf,MAAM,CAACgB,YAAa;IAA/C;EAAX,CAA1D,CAAP;AACD;AAED,OAAO,SAASC,MAAT,CAAgBC,WAAhB,EAAqC;EAC1C,OAAOnB,KAAK,CAACY,IAAN,CAAWP,UAAX,EAAuB;IAAEe,KAAK,EAAED;EAAT,CAAvB,EAA+C;IAAEJ,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASf,MAAM,CAACgB,YAAa;IAA/C;EAAX,CAA/C,CAAP;AACD,C,CAED;;AACA,OAAO,MAAMI,QAAQ,GAAG,CACtBC,KADsB,EAEtBC,IAFsB,EAGtBC,QAHsB,EAItBC,QAJsB,EAKtBC,OALsB,EAMtBC,eANsB,EAOtBC,WAPsB,EAQtBC,MARsB,EAStBC,GATsB,KAUnB;EACH,OAAO9B,KAAK,CAACY,IAAN,CAAgBN,YAAhB,EAA8B;IACnCgB,KADmC;IAEnCC,IAFmC;IAGnCC,QAHmC;IAInCC,QAJmC;IAKnCC,OALmC;IAMnCG,MANmC;IAOnCC,GAPmC;IAQnCC,WAAW,EAAE,KARsB;IASnCC,SAAS,EAAE;EATwB,CAA9B,EAUJ;IAAEjB,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASf,MAAM,CAACgB,YAAa;IAA/C;EAAX,CAVI,CAAP;AAWD,CAtBM,C,CAwBP;;AACA,OAAO,SAASgB,eAAT,CAAyBC,KAAzB,EAAwC;EAC7C,OAAOlC,KAAK,CAACY,IAAN,CAAgCL,oBAAhC,EAAsD;IAAE2B;EAAF,CAAtD,CAAP;AACD;AACD,OAAO,SAASC,cAAT,CACLD,KADK,EAELvB,QAFK,EAGLgB,eAHK,EAILP,KAJK,EAKL;EACA,OAAOpB,KAAK,CAACY,IAAN,CAAgCJ,mBAAhC,EAAqD;IAC1D0B,KAD0D;IAE1DvB,QAF0D;IAG1DgB,eAH0D;IAI1DP;EAJ0D,CAArD,CAAP;AAMD"},"metadata":{},"sourceType":"module"}