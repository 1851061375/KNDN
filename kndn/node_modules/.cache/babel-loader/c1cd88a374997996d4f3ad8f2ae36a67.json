{"ast":null,"code":"const t = Object.prototype.toString;\n\nfunction e(e) {\n  return \"number\" == typeof e || function (t) {\n    return \"object\" == typeof t && null !== t;\n  }(e) && \"[object Number]\" == function (e) {\n    return null == e ? void 0 === e ? \"[object Undefined]\" : \"[object Null]\" : t.call(e);\n  }(e);\n}\n\nconst n = [\"không\", \"một\", \"hai\", \"ba\", \"bốn\", \"năm\", \"sáu\", \"bảy\", \"tám\", \"chín\"],\n      r = [\"mười\", \"hai mươi\", \"ba mươi\", \"bốn mươi\", \"năm mươi\", \"sáu mươi\", \"bảy mươi\", \"tám mươi\", \"chín mươi\"],\n      s = [\"không trăm\", \"một trăm\", \"hai trăm\", \"ba trăm\", \"bốn trăm\", \"năm trăm\", \"sáu trăm\", \"bảy trăm\", \"tám trăm\", \"chín trăm\"],\n      i = t => {\n  const e = `${t}`.split(\"\"),\n        s = parseInt(e[0]),\n        i = parseInt(e[1]);\n  return 0 === i ? r[s - 1] : 5 === i ? `${r[s - 1]} lăm` : 4 === i ? `${r[s - 1]} tư` : 1 === i ? 1 === s ? `${r[s - 1]} một` : `${r[s - 1]} mốt` : `${r[s - 1]} ${n[i]}`;\n},\n      $ = t => {\n  const e = `${t}`.split(\"\"),\n        r = parseInt(e[0]),\n        $ = parseInt(e[1]),\n        o = parseInt(e[2]);\n  return $ > 0 ? `${s[r]} ${i(`${$}${o}`)}` : 0 === o ? `${s[r]}` : 4 === o ? `${s[r]} linh tư` : `${s[r]} linh ${n[o]}`;\n},\n      o = t => {\n  const e = `${t}`.split(\"\").reverse(),\n        r = e.slice(0, 3).reverse().join(\"\"),\n        s = parseInt(e.slice(3, e.length).reverse().join(\"\")),\n        o = `${s}`.length;\n  let l = \"\";\n  return parseInt(r) >= 1 && (l = $(r)), 1 === o ? `${n[s]} nghìn ${l}` : 2 === o ? `${i(s)} nghìn ${l}` : `${$(s)} nghìn ${l}`;\n},\n      l = t => {\n  const e = `${t}`.split(\"\").reverse(),\n        r = e.slice(0, 6).reverse().join(\"\"),\n        s = parseInt(e.slice(6, e.length).reverse().join(\"\")),\n        l = `${s}`.length;\n  let c = \"\";\n  return parseInt(r) > 999 ? c = o(r) : parseInt(r) <= 999 && parseInt(r) >= 1 && (c = $(`${r}`.split(\"\").slice(3, 6).join(\"\"))), 1 === l ? `${n[s]} triệu ${c}` : 2 === l ? `${i(s)} triệu ${c}` : `${$(s)} triệu ${c}`;\n},\n      c = function (t) {\n  let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  try {\n    if (!e(t)) throw new Error(\"Input is not a number\");\n    if (Math.abs(t) > 9007199254740992) throw new Error(\"Your number is too big\");\n    if (t < 0) return `âm ${c(Math.abs(t))}`;\n    const s = `${t}`.length;\n    let p;\n    return 1 === s && (p = n[t]), 2 === s && (p = i(t)), 3 === s && (p = $(t)), s > 3 && s <= 6 && (p = o(t)), s > 6 && s <= 9 && (p = l(t)), s > 9 && (p = (t => {\n      const e = `${t}`.split(\"\").reverse(),\n            r = e.slice(0, 9).reverse().join(\"\"),\n            s = parseInt(e.slice(9, e.length).reverse().join(\"\"));\n      let c = \"\";\n      parseInt(r) > 999999 && parseInt(r) <= 999999999 ? c = l(r) : parseInt(r) <= 999999 && parseInt(r) > 999 ? c = o(`${r}`.split(\"\").slice(3, 9).join(\"\")) : parseInt(r) <= 999 && parseInt(r) >= 1 && (c = $(`${r}`.split(\"\").slice(6, 9).join(\"\")));\n      const p = `${s}`.length;\n      return 1 === p ? `${n[s]} tỷ ${c}` : 2 === p ? `${i(s)} tỷ ${c}` : 3 === p ? `${$(s)} tỷ ${c}` : p > 3 && p <= 6 ? `${o(s)} tỷ ${c}` : p > 6 && p <= 9 ? `${l(s)} tỷ ${c}` : void 0;\n    })(t)), r ? function () {\n      let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      let n = t.split(\" \").reverse();\n      const r = n.findIndex(t => \"trăm\" === t),\n            s = n.findIndex(t => \"nghìn\" === t),\n            i = n.findIndex(t => \"triệu\" === t),\n            $ = n.findIndex(t => \"tỷ\" === t);\n      return -1 !== $ && e && n.splice($, 1, `${n[$]}${e}`), -1 !== i && e && n.splice(i, 1, `${n[i]}${e}`), -1 !== s && e && -1 !== r && n.splice(s, 1, `${n[s]}${e}`), n.reverse().join(\" \");\n    }(p, r) : p;\n  } catch (t) {\n    console.error(\"error\", t);\n  }\n};\n\nvar p = {\n  getText: c\n};\nexport default p;\nexport { c as getText };","map":null,"metadata":{},"sourceType":"module"}