{"ast":null,"code":"import { all } from 'redux-saga/effects';\nimport { combineReducers } from 'redux';\nimport { globalSlice } from './global/Slice';\nimport * as auth from '../../app/modules/auth';\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  auth: auth.reducer\n});\nexport function* rootSaga() {\n  //yield all([])\n  yield all([auth.saga()]);\n}","map":{"version":3,"names":["all","combineReducers","globalSlice","auth","rootReducer","global","reducer","rootSaga","saga"],"sources":["C:/Users/lappv/Desktop/KNDN/kndn/src/setup/redux/RootReducer.ts"],"sourcesContent":["import {all} from 'redux-saga/effects'\r\nimport {combineReducers} from 'redux'\r\nimport { globalSlice } from './global/Slice'\r\nimport * as auth from '../../app/modules/auth'\r\n\r\nexport const rootReducer = combineReducers({\r\n  global: globalSlice.reducer,\r\n  auth: auth.reducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport function* rootSaga() {\r\n  //yield all([])\r\n  yield all([auth.saga()])\r\n}\r\n"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,KAAKC,IAAZ,MAAsB,wBAAtB;AAEA,OAAO,MAAMC,WAAW,GAAGH,eAAe,CAAC;EACzCI,MAAM,EAAEH,WAAW,CAACI,OADqB;EAEzCH,IAAI,EAAEA,IAAI,CAACG;AAF8B,CAAD,CAAnC;AAOP,OAAO,UAAUC,QAAV,GAAqB;EAC1B;EACA,MAAMP,GAAG,CAAC,CAACG,IAAI,CAACK,IAAL,EAAD,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}