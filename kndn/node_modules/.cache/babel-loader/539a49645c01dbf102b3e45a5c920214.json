{"ast":null,"code":"/**\n * @preserve jquery-param (c) KNOWLEDGECODE | MIT\n */\n\n/**\n * serialize any object\n * @param {Object} a - any object to serialize\n * @returns {string} a serialized string\n */\nvar param = function (a) {\n  var s = [];\n\n  var add = function (k, v) {\n    v = typeof v === 'function' ? v() : v;\n    v = v === null ? '' : v === undefined ? '' : v;\n    s[s.length] = encodeURIComponent(k) + '=' + encodeURIComponent(v);\n  };\n\n  var buildParams = function (prefix, obj) {\n    var i, len, key;\n\n    if (prefix) {\n      if (Array.isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n          buildParams(prefix + '[' + (typeof obj[i] === 'object' && obj[i] ? i : '') + ']', obj[i]);\n        }\n      } else if (Object.prototype.toString.call(obj) === '[object Object]') {\n        for (key in obj) {\n          buildParams(prefix + '[' + key + ']', obj[key]);\n        }\n      } else {\n        add(prefix, obj);\n      }\n    } else if (Array.isArray(obj)) {\n      for (i = 0, len = obj.length; i < len; i++) {\n        add(obj[i].name, obj[i].value);\n      }\n    } else {\n      for (key in obj) {\n        buildParams(key, obj[key]);\n      }\n    }\n\n    return s;\n  };\n\n  return buildParams('', a).join('&');\n};\n\nexport default param;","map":null,"metadata":{},"sourceType":"module"}