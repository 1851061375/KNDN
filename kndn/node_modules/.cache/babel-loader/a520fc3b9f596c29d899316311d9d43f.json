{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lappv\\\\Desktop\\\\KNDN\\\\kndn\\\\src\\\\app\\\\App.jsx\";\nimport React, { Suspense, useState, useEffect, useRef } from 'react';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { I18nProvider } from '../_metronic/i18n/i18nProvider';\nimport { LayoutProvider, LayoutSplashScreen } from '../_metronic/layout/core';\nimport { Routes } from './routing/Routes';\nimport AuthInit from './modules/auth/redux/AuthInit';\nimport { ToastContainer } from 'react-toastify';\nimport { hubConnection } from 'aspnet-signalr-reactjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CONFIG } from '../helpers/config';\nimport * as actions from '../setup/redux/global/Actions';\nimport moment from 'moment';\nimport 'moment/locale/vi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('vi');\n\nconst App = _ref => {\n  let {\n    basename\n  } = _ref;\n  const connection = useSelector(state => state.global.connection);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const newConnection = hubConnection(`/signalr`, {\n      useDefaultPath: false\n    });\n    dispatch(actions.setConnection(newConnection));\n  }, []);\n  useEffect(() => {\n    if (connection) {}\n  }, [connection]);\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(LayoutSplashScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      basename: basename,\n      children: /*#__PURE__*/_jsxDEV(I18nProvider, {\n        children: /*#__PURE__*/_jsxDEV(LayoutProvider, {\n          children: /*#__PURE__*/_jsxDEV(AuthInit, {\n            children: [/*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: true,\n              newestOnTop: false,\n              closeOnClick: true,\n              rtl: false,\n              pauseOnFocusLoss: true,\n              draggable: true,\n              pauseOnHover: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nexport { App };","map":{"version":3,"names":["React","Suspense","useState","useEffect","useRef","BrowserRouter","HashRouter","I18nProvider","LayoutProvider","LayoutSplashScreen","Routes","AuthInit","ToastContainer","hubConnection","useDispatch","useSelector","CONFIG","actions","moment","locale","App","basename","connection","state","global","dispatch","newConnection","useDefaultPath","setConnection"],"sources":["C:/Users/lappv/Desktop/KNDN/kndn/src/app/App.jsx"],"sourcesContent":["import React, { Suspense, useState, useEffect, useRef } from 'react'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport { I18nProvider } from '../_metronic/i18n/i18nProvider'\r\nimport { LayoutProvider, LayoutSplashScreen } from '../_metronic/layout/core'\r\nimport { Routes } from './routing/Routes'\r\nimport AuthInit from './modules/auth/redux/AuthInit'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { hubConnection } from 'aspnet-signalr-reactjs';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {CONFIG} from '../helpers/config'\r\n\r\nimport * as actions from '../setup/redux/global/Actions' \r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/vi'\r\nmoment.locale('vi')\r\n\r\nconst App = ({ basename }) => {\r\n\r\n  const connection = useSelector((state) => state.global.connection)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const newConnection = hubConnection(`/signalr`, { useDefaultPath: false });\r\n    dispatch(actions.setConnection(newConnection))\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection) {\r\n      \r\n    }\r\n  }, [connection]);\r\n\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <HashRouter basename={basename}>\r\n        <I18nProvider>\r\n          <LayoutProvider>\r\n            <AuthInit>\r\n              <Routes />\r\n              <ToastContainer\r\n                position='top-right'\r\n                autoClose={3000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n              />\r\n            </AuthInit>\r\n          </LayoutProvider>\r\n        </I18nProvider>\r\n      </HashRouter>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport { App }\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,0BAAnD;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,MAAR,QAAqB,mBAArB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,+BAAzB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;;AACAA,MAAM,CAACC,MAAP,CAAc,IAAd;;AAEA,MAAMC,GAAG,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE5B,MAAMC,UAAU,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,UAAzB,CAA9B;EAEA,MAAMG,QAAQ,GAAGX,WAAW,EAA5B;EAEAX,SAAS,CAAC,MAAM;IACd,MAAMuB,aAAa,GAAGb,aAAa,CAAE,UAAF,EAAa;MAAEc,cAAc,EAAE;IAAlB,CAAb,CAAnC;IACAF,QAAQ,CAACR,OAAO,CAACW,aAAR,CAAsBF,aAAtB,CAAD,CAAR;EACD,CAHQ,EAGN,EAHM,CAAT;EAKAvB,SAAS,CAAC,MAAM;IACd,IAAImB,UAAJ,EAAgB,CAEf;EACF,CAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;EAMA,oBACE,QAAC,QAAD;IAAU,QAAQ,eAAE,QAAC,kBAAD;MAAA;MAAA;MAAA;IAAA,QAApB;IAAA,uBACE,QAAC,UAAD;MAAY,QAAQ,EAAED,QAAtB;MAAA,uBACE,QAAC,YAAD;QAAA,uBACE,QAAC,cAAD;UAAA,uBACE,QAAC,QAAD;YAAA,wBACE,QAAC,MAAD;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,cAAD;cACE,QAAQ,EAAC,WADX;cAEE,SAAS,EAAE,IAFb;cAGE,eAAe,MAHjB;cAIE,WAAW,EAAE,KAJf;cAKE,YAAY,MALd;cAME,GAAG,EAAE,KANP;cAOE,gBAAgB,MAPlB;cAQE,SAAS,MARX;cASE,YAAY;YATd;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAzCD;;AA2CA,SAASD,GAAT"},"metadata":{},"sourceType":"module"}