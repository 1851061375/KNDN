{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport FormFileButton from './FormFileButton';\nimport FormFileText from './FormFileText';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormFileLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? 'Choose file...' : _ref$label,\n      _ref$button = _ref.button,\n      button = _ref$button === void 0 ? 'Browse' : _ref$button,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"htmlFor\", \"label\", \"button\", \"children\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-file-label');\n  return /*#__PURE__*/React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  }), children || /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormFileText, null, label), /*#__PURE__*/React.createElement(FormFileButton, null, button)));\n});\nFormFileLabel.displayName = 'FormFileLabel';\nexport default FormFileLabel;","map":null,"metadata":{},"sourceType":"module"}