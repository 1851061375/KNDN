{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lappv\\\\Desktop\\\\KNDN\\\\kndn\\\\src\\\\app\\\\modules\\\\auth\\\\redux\\\\AuthInit.tsx\";\nimport { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { LayoutSplashScreen } from '../../../../_metronic/layout/core';\nimport * as auth from './AuthRedux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapState = state => ({\n  auth: state.auth\n});\n\nconst connector = connect(mapState, auth.actions);\n\nconst AuthInit = props => {\n  const dispatch = useDispatch();\n  const [showSplashScreen, setShowSplashScreen] = useState(true);\n  useEffect(() => {\n    setShowSplashScreen(false); // eslint-disable-next-line\n  }, []);\n  return showSplashScreen ? /*#__PURE__*/_jsxDEV(LayoutSplashScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.children\n  }, void 0, false);\n};\n\nexport default connector(AuthInit);","map":{"version":3,"names":["useEffect","useState","connect","useDispatch","LayoutSplashScreen","auth","mapState","state","connector","actions","AuthInit","props","dispatch","showSplashScreen","setShowSplashScreen","children"],"sources":["C:/Users/lappv/Desktop/KNDN/kndn/src/app/modules/auth/redux/AuthInit.tsx"],"sourcesContent":["import {FC, useRef, useEffect, useState} from 'react'\r\nimport {shallowEqual, useSelector, connect, useDispatch, ConnectedProps} from 'react-redux'\r\nimport {LayoutSplashScreen} from '../../../../_metronic/layout/core'\r\nimport * as auth from './AuthRedux'\r\nimport {RootState} from '../../../../setup'\r\n\r\nconst mapState = (state: RootState) => ({auth: state.auth})\r\nconst connector = connect(mapState, auth.actions)\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nconst AuthInit: FC<PropsFromRedux> = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [showSplashScreen, setShowSplashScreen] = useState(true)\r\n  useEffect(() => {\r\n    setShowSplashScreen(false)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return showSplashScreen ? <LayoutSplashScreen /> : <>{props.children}</>\r\n}\r\n\r\nexport default connector(AuthInit)\r\n"],"mappings":";AAAA,SAAoBA,SAApB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAmCC,OAAnC,EAA4CC,WAA5C,QAA8E,aAA9E;AACA,SAAQC,kBAAR,QAAiC,mCAAjC;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,KAAuB;EAACF,IAAI,EAAEE,KAAK,CAACF;AAAb,CAAvB,CAAjB;;AACA,MAAMG,SAAS,GAAGN,OAAO,CAACI,QAAD,EAAWD,IAAI,CAACI,OAAhB,CAAzB;;AAGA,MAAMC,QAA4B,GAAIC,KAAD,IAAW;EAC9C,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,IAAD,CAAxD;EACAD,SAAS,CAAC,MAAM;IACdc,mBAAmB,CAAC,KAAD,CAAnB,CADc,CAEd;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,OAAOD,gBAAgB,gBAAG,QAAC,kBAAD;IAAA;IAAA;IAAA;EAAA,QAAH,gBAA4B;IAAA,UAAGF,KAAK,CAACI;EAAT,iBAAnD;AACD,CATD;;AAWA,eAAeP,SAAS,CAACE,QAAD,CAAxB"},"metadata":{},"sourceType":"module"}