{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { reduxBatch } from '@manaflair/redux-batch';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { rootReducer, rootSaga } from './RootReducer';\nimport storage from 'redux-persist/lib/storage';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [...getDefaultMiddleware({\n  immutableCheck: false,\n  serializableCheck: false,\n  thunk: true\n}), sagaMiddleware];\nconst persistConfig = {\n  storage,\n  key: 'dgtt',\n  blacklist: [],\n  whitelist: ['']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: [reduxBatch]\n});\n\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\nexport const persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","createSagaMiddleware","reduxBatch","persistStore","persistReducer","rootReducer","rootSaga","storage","sagaMiddleware","middleware","immutableCheck","serializableCheck","thunk","persistConfig","key","blacklist","whitelist","persistedReducer","store","reducer","devTools","process","env","NODE_ENV","enhancers","persistor","run"],"sources":["C:/Users/lappv/Desktop/KNDN/kndn/src/setup/redux/Store.ts"],"sourcesContent":["import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {reduxBatch} from '@manaflair/redux-batch'\r\nimport {persistStore, persistReducer} from 'redux-persist'\r\nimport {rootReducer, rootSaga} from './RootReducer'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true,\r\n  }),\r\n  sagaMiddleware,\r\n]\r\n\r\nconst persistConfig = {\r\n  storage,\r\n  key: 'dgtt',\r\n  blacklist: [],\r\n  whitelist: [''],\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  enhancers: [reduxBatch],\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\r\nexport const persistor = persistStore(store)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,oBAAxB,QAAmD,kBAAnD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,eAApC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,MAAMQ,UAAU,GAAG,CACjB,GAAGT,oBAAoB,CAAC;EACtBU,cAAc,EAAE,KADM;EAEtBC,iBAAiB,EAAE,KAFG;EAGtBC,KAAK,EAAE;AAHe,CAAD,CADN,EAMjBJ,cANiB,CAAnB;AASA,MAAMK,aAAa,GAAG;EACpBN,OADoB;EAEpBO,GAAG,EAAE,MAFe;EAGpBC,SAAS,EAAE,EAHS;EAIpBC,SAAS,EAAE,CAAC,EAAD;AAJS,CAAtB;AAOA,MAAMC,gBAAgB,GAAGb,cAAc,CAACS,aAAD,EAAgBR,WAAhB,CAAvC;AAEA,MAAMa,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAEF,gBADkB;EAE3BR,UAF2B;EAG3BW,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAHR;EAI3BC,SAAS,EAAE,CAACtB,UAAD;AAJgB,CAAD,CAA5B;;AASA;AACA;AACA;AACA;AACA,OAAO,MAAMuB,SAAS,GAAGtB,YAAY,CAACe,KAAD,CAA9B;AAEPV,cAAc,CAACkB,GAAf,CAAmBpB,QAAnB;AAEA,eAAeY,KAAf"},"metadata":{},"sourceType":"module"}